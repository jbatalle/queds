version: '3.8'

services:
  api:
    build:
      context: ./app
      dockerfile: Dockerfile
      target: api
    command: python app.py run -h 0.0.0.0
    volumes:
      - ./app/api:/usr/src/
      - ./app/config:/usr/src/config
      - ./app/models:/usr/src/models
      - ./VERSION:/usr/VERSION
    environment:
      - FLASK_ENV=development
      - BACKEND_SETTINGS=config.local
#      - PYTHON_FILE=app.py
#      - PYTHON_ARGS="run -h 0.0.0.0:${PORT}"
    networks:
      - api_bridge
    restart: always

  backend:
    build:
      context: ./app
      dockerfile: Dockerfile
      target: backend
    command: python worker.py
    volumes:
      - ./app/backend:/usr/src/
      - ./app/config:/usr/src/config
      - ./app/models:/usr/src/models
    environment:
      - BACKEND_SETTINGS=config.local
      - PYTHON_FILE=worker.py
      - PYTHON_ARGS=""
    networks:
      - api_bridge
    restart: always
    deploy:
      replicas: 1

  migrate:
    image: queds_api
    command: bash -c "cd models && alembic upgrade head"
    volumes:
      - ./app/config:/usr/src/config
      - ./app/models:/usr/src/models
    environment:
      - BACKEND_SETTINGS=config.local
    networks:
      - api_bridge
    depends_on:
      - api

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm run dev
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
      - VITE_APP_BACKEND_URL=/api
    networks:
      - api_bridge
    depends_on:
      - api

  nginx:
    image: nginx
    volumes:
      - ./nginx_template.conf:/etc/nginx/conf.d/default.conf
    restart: always
    ports:
      - 6060:80
    depends_on:
      - backend
      - frontend
    networks:
      - api_bridge

networks:
  api_bridge:
    driver: bridge

volumes:
  users_data:
