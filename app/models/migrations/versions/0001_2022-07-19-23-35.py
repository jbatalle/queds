"""empty message

Revision ID: 0001
Revises: 
Create Date: 2022-07-19 23:35:02.799730

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=True),
    sa.Column('pair', sa.String(length=10), nullable=True),
    sa.Column('high', sa.Float(), nullable=True),
    sa.Column('low', sa.Float(), nullable=True),
    sa.Column('volume', sa.Float(), nullable=True),
    sa.Column('open', sa.Float(), nullable=True),
    sa.Column('close', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('timestamp', 'pair', name='_timestamp_ticker')
    )
    op.create_table('entities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tickers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ticker', sa.String(length=8), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('currency', sa.String(length=5), nullable=True),
    sa.Column('isin', sa.String(length=50), nullable=True),
    sa.Column('ticker_yahoo', sa.String(length=10), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticker', 'isin', 'status', name='_ticker_isin_status_unique')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.Column('account', sa.String(length=20), nullable=True),
    sa.Column('currency', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('virtual_balance', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['entity_id'], ['entities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account'),
    sa.UniqueConstraint('name')
    )
    op.create_table('entity_credential_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('mode', sa.Enum('TEXT', 'PASSWORD', 'OPTION', name='mode'), nullable=False),
    sa.Column('cred_type', sa.Enum('API_KEY', 'API_SECRET', 'USERNAME', 'USER_ID', 'PASSWORD', name='cred_type'), nullable=False),
    sa.ForeignKeyConstraint(['entity_id'], ['entities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entity_id', 'mode', 'cred_type', name='_mode_cred_type_uc')
    )
    op.create_table('exchange_wallet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('break_even', sa.Float(), nullable=True),
    sa.Column('benefits', sa.Float(), nullable=True),
    sa.Column('fees', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_prices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(), nullable=False),
    sa.Column('ticker', sa.Integer(), nullable=True),
    sa.Column('high', sa.Float(), nullable=True),
    sa.Column('low', sa.Float(), nullable=True),
    sa.Column('volume', sa.Float(), nullable=True),
    sa.Column('open', sa.Float(), nullable=True),
    sa.Column('close', sa.Float(), nullable=True),
    sa.Column('pre', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['ticker'], ['tickers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('timestamp', 'ticker', name='_timestamp_ticker_unique')
    )
    op.create_table('stock_wallet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ticker_id', sa.Integer(), nullable=True),
    sa.Column('shares', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('break_even', sa.Float(), nullable=True),
    sa.Column('benefits', sa.Float(), nullable=True),
    sa.Column('fees', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['ticker_id'], ['tickers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('watchlists',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('account_credential_params',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(length=250), nullable=True),
    sa.Column('credential_type_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('account_type', sa.Unicode(length=255), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['credential_type_id'], ['entity_credential_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('credential_type_id', 'account_id', name='cred_type_account_uc')
    )
    op.create_table('crowd_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('external_id', sa.String(length=70), nullable=True),
    sa.Column('value_date', sa.Date(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('interest', sa.Float(), nullable=True),
    sa.Column('project_id', sa.String(length=70), nullable=True),
    sa.Column('tax', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    op.create_table('exchange_balance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('update_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exchange_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('external_id', sa.String(length=70), nullable=True),
    sa.Column('value_date', sa.Date(), nullable=False),
    sa.Column('pair', sa.String(length=150), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('fee', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    op.create_table('exchange_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('external_id', sa.String(length=70), nullable=True),
    sa.Column('value_date', sa.Date(), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('fee', sa.Float(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('tx_address', sa.String(length=200), nullable=True),
    sa.Column('rx_address', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    op.create_table('stock_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('external_id', sa.String(length=70), nullable=True),
    sa.Column('value_date', sa.Date(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('ticker_id', sa.Integer(), nullable=True),
    sa.Column('shares', sa.Integer(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('currency', sa.String(length=5), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('fee', sa.Float(), nullable=True),
    sa.Column('exchange_fee', sa.Float(), nullable=True),
    sa.Column('currency_rate', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ticker_id'], ['tickers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    op.create_table('watchlist',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('watchlists', sa.Integer(), nullable=True),
    sa.Column('ticker', sa.Integer(), nullable=True),
    sa.Column('high', sa.Float(), nullable=True),
    sa.Column('low', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['ticker'], ['tickers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['watchlists'], ['watchlists.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('watchlists', 'ticker', name='_watchlist_ticker_unique')
    )
    op.create_table('exchange_closed_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sell_transaction_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sell_transaction_id'], ['exchange_orders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_closed_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sell_transaction_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sell_transaction_id'], ['stock_transactions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_open_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('wallet_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('shares', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['stock_transactions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wallet_id'], ['stock_wallet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exchange_proxy_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('closed_order_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('shares', sa.Float(), nullable=True),
    sa.Column('partial_fee', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['closed_order_id'], ['exchange_closed_orders.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['exchange_orders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_proxy_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('closed_order_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('shares', sa.Integer(), nullable=True),
    sa.Column('partial_fee', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['closed_order_id'], ['stock_closed_orders.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['stock_transactions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stock_proxy_orders')
    op.drop_table('exchange_proxy_orders')
    op.drop_table('stock_open_orders')
    op.drop_table('stock_closed_orders')
    op.drop_table('exchange_closed_orders')
    op.drop_table('watchlist')
    op.drop_table('stock_transactions')
    op.drop_table('exchange_transactions')
    op.drop_table('exchange_orders')
    op.drop_table('exchange_balance')
    op.drop_table('crowd_transaction')
    op.drop_table('account_credential_params')
    op.drop_table('watchlists')
    op.drop_table('stock_wallet')
    op.drop_table('stock_prices')
    op.drop_table('exchange_wallet')
    op.drop_table('entity_credential_types')
    op.drop_table('accounts')
    op.drop_table('users')
    op.drop_table('tickers')
    op.drop_table('entities')
    op.drop_table('currency')
    # ### end Alembic commands ###
