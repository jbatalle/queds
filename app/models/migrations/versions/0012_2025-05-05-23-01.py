"""empty message

Revision ID: 0012
Revises: 0011
Create Date: 2025-05-05 23:01:17.052989

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0012'
down_revision = '0011'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('crypto_price',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('source', sa.String(length=150), nullable=True),
    sa.Column('target', sa.String(length=150), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exchange_tax_summaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('currency', sa.String(length=20), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('total_proceeds', sa.Float(), nullable=True),
    sa.Column('total_cost_basis', sa.Float(), nullable=True),
    sa.Column('total_gain_loss', sa.Float(), nullable=True),
    sa.Column('total_fees', sa.Float(), nullable=True),
    sa.Column('num_trades', sa.Integer(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('sell_event_id', sa.Integer(), nullable=True),
    sa.Column('buy_event_id', sa.Integer(), nullable=True),
    sa.Column('log_type', sa.String(length=50), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['buy_event_id'], ['crypto_events.id'], ),
    sa.ForeignKeyConstraint(['sell_event_id'], ['crypto_events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    #op.drop_table('exchange_transactions')
    op.drop_table('crowd_transaction')
    #op.drop_table('exchange_orders')
    op.add_column('exchange_open_orders', sa.Column('exchange_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'exchange_open_orders', 'accounts', ['exchange_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'exchange_open_orders', type_='foreignkey')
    op.drop_column('exchange_open_orders', 'exchange_id')
    op.create_table('exchange_orders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(length=70), autoincrement=False, nullable=True),
    sa.Column('pair', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fee', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('value_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], name='exchange_orders_account_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id'], ['crypto_events.id'], name='exchange_orders_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='exchange_orders_pkey'),
    sa.UniqueConstraint('account_id', 'external_id', name='_exchange_account_id_external_id')
    )
    op.create_table('crowd_transaction',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(length=70), autoincrement=False, nullable=True),
    sa.Column('value_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('interest', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.VARCHAR(length=70), autoincrement=False, nullable=True),
    sa.Column('tax', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], name='crowd_transaction_account_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='crowd_transaction_pkey'),
    sa.UniqueConstraint('external_id', name='crowd_transaction_external_id_key')
    )
    op.create_table('exchange_transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(length=70), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fee', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tx_address', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('rx_address', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('value_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], name='exchange_transactions_account_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='exchange_transactions_pkey'),
    sa.UniqueConstraint('account_id', 'external_id', name='_exchange_transaction_account_id_external_id')
    )
    op.drop_table('transaction_logs')
    op.drop_table('exchange_tax_summaries')
    op.drop_table('crypto_price')
    # ### end Alembic commands ###
